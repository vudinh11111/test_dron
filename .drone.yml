kind: pipeline
type: docker
name: build-docker

steps:
  - name: build
    image: golang:1.22-alpine
    commands:
      - apk add --no-cache git bash zip
      - go mod tidy
      - go build -v -o myapp ./...
      - ls -lh myapp

  - name: test
    image: golang:1.22-alpine
    commands:
      - chmod +x myapp
      - ./myapp --version || true   # tránh fail nếu app chưa có flag --version
      - go test ./... -v

  - name: archive
    image: alpine
    commands:
      - apk add --no-cache zip
      - zip -r myapp-${DRONE_BUILD_NUMBER}.zip myapp
      - ls -lh *.zip
    when:
      status:
        - success

  - name: create-docker-image
    image: docker:latest
    environment:
      DOCKER_BUILDKIT: 1
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
    commands:
      - apk add --no-cache unzip
      - unzip -o myapp-${DRONE_BUILD_NUMBER}.zip   # ⚙️ Thêm -o để không bị hỏi ghi đè
      - chmod +x myapp
      - |
        cat > Dockerfile <<'EOF'
        FROM alpine:latest
        WORKDIR /app
        COPY myapp .
        RUN chmod +x myapp
        CMD ["./myapp"]
        EOF
      - docker build -t myapp:${DRONE_BUILD_NUMBER} .
      - docker images | grep myapp
    when:
      status:
        - success

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock
