kind: pipeline
type: docker
name: build-docker

steps:
  - name: build
    image: golang:1.22-alpine
    commands:
      - apk add --no-cache git bash zip
      - go mod tidy
      - go build -v -o myapp ./...
      - ls -lh myapp

  - name: test
    image: golang:1.22-alpine
    commands:
      - ./myapp --version
      - go test ./... -v

  - name: archive
    image: alpine
    commands:
      - apk add --no-cache zip
      - zip myapp-${DRONE_BUILD_NUMBER}.zip myapp
      - ls -lh *.zip

  - name: create-docker-image
    image: docker:latest
    commands:
      - apk add --no-cache zip
      - unzip myapp-${DRONE_BUILD_NUMBER}.zip
      - chmod +x myapp
      - |
        cat > Dockerfile << EOF
        FROM alpine:latest
        WORKDIR /app
        COPY myapp .
        RUN chmod +x myapp
        CMD ["./myapp"]
        EOF
      - docker build -t myapp:${DRONE_BUILD_NUMBER} .
      - docker images | grep myapp
      - echo "[OK] File zip saved to: /tmp/drone-artifacts/myapp-${DRONE_BUILD_NUMBER}.zip"
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock
